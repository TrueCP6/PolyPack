{ 
	"WBBlendingConfig": { 
		/*  This option can let you blacklist entire biomes or mods to
		    prevent any importing of any kind from them. You can also use
		    terms to ban any biome that contains the terms too.
		    
		    To blacklist a mod's biome, you would enter the identifier
		    for the biome. That means you need to enter the mod's ID first,
		    then put a : (semicolon), and then the ID of the biome.
		    For example, to blacklist just vanilla's Ice Spike biome, you
		    would put in minecraft:ice_spike and nothing will be imported
		    from that specific biome.
		    
		    If you want to blacklist an entire mod itself so no importing
		    will happen for any of its biome, just enter the mod's ID and thenr
		    put an * at the end.r
		    
		    To blacklist by key terms, just enter the term alone such as "ocean"
		    and all biomes with ocean in their name will not be imported.
		    
		    NOTE: You can blacklist multiple things at a time. Just separate
		    each entry with a , (comma). Here's an example blacklisting a mod
		    and a vanilla biome at the same time: 
		    "ultra_amplified_dimension*, minecraft:jungle_edge"
		*/
		"blanketBlacklist": "ultra_amplified_dimension*",
		/*  Blacklist features by key terms, mod ID, or their identifier
		    
		    To blacklist by key terms, just enter the term alone such as "tree"
		    and all features with tree in their name will not be imported.
		    
		    To blacklist by mod ID, just enter the mod ID with an * on the end such as
		    "ultra_amplified_dimension*" and all features from that mod will not be imported.
		    
		    To blacklist a single feature, enter the mod ID, then :, and then the 
		    feature's name. For example, "minecraft:icebergs" will prevent vanilla's
		    icebergs from being imported but allow other mod's icebergs to be imported.
		    
		    NOTE: You can blacklist multiple things at a time. Just separate
		    each entry with a , (comma). Here's an example blacklisting all trees
		    and vanilla's icebergs: 
		    "tree, minecraft:iceberg"
		*/
		"blacklistedFeatures": "minecraft:basalt_blobs, minecraft:blackstone_blobs",
		/*  Blacklist structures by key terms, mod ID, or their identifier
		    
		    To blacklist by key terms, just enter the term alone such as "temple"
		    and all features with temple in their name will not be imported.
		    
		    To blacklist by mod ID, just enter the mod ID with an * on the end such as
		    "ultra_amplified_dimension*" and all structures from that mod will not be imported.
		    
		    To blacklist a single feature, enter the mod ID, then :, and then the 
		    feature's name. For example, "minecraft:igloo" will prevent vanilla's
		    igloos from being imported but allow other mod's igloos to be imported.
		    
		    NOTE: You can blacklist multiple things at a time. Just separate
		    each entry with a , (comma). Here's an example blacklisting all temples
		    and vanilla's igloos: 
		    "temple, minecraft:igloo"
		*/
		"blacklistedStructures": "",
		/*  Blacklist carvers by key terms, mod ID, or their identifier
		    
		    To blacklist by key terms, just enter the term alone such as "cave"
		    and all carvers with cave in their name will not be imported if they
		    are registered with a name. Not many mods register their carvers sadly.
		    
		    To blacklist by mod ID, just enter the mod ID with an * on the end such as
		    "ultra_amplified_dimension*" and all carvers from that mod will not be imported.
		    
		    To blacklist a single feature, enter the mod ID, then :, and then the 
		    feature's name. For example, "minecraft:underwater_canyon" will prevent 
		    vanilla's underwater canyons (ravines) from being imported. For underwater
		    caves, use "minecraft:underwater_cave" to stop them from being imported.
		    
		    NOTE: You can blacklist multiple things at a time. Just separate
		    each entry with a , (comma). Here's an example blacklisting all caves
		    and vanilla's underwater canyons: 
		    "cave, minecraft:underwater_canyon"
		*/
		"blacklistedCarvers": "",
		/*  Blacklist natural spawning mobs by key terms,
		    mod ID, or their identifier
		    
		    To blacklist by key terms, just enter the term alone such as "zombie"
		    and all mobs with zombie in their name will not be imported.
		    
		    To blacklist by mod ID, just enter the mod ID with an * on the end such as
		    "super_duper_mob_mod*" and all mobs from that mod will not be imported.
		    
		    To blacklist a single mob, enter the mod ID, then :, and then the 
		    mob's name. For example, "minecraft:ghast" will prevent 
		    vanilla's ghast from being imported.
		    
		    NOTE: You can blacklist multiple things at a time. Just separate
		    each entry with a , (comma). Here's an example blacklisting all zombies
		    and vanilla's ghasts: 
		    "zombie, minecraft:ghast"
		*/
		"blacklistedSpawns": "",
		/*  Blacklist surfaces by key terms, mod ID, or by block's identifier
		    This will blacklist based on the very top most block that the surface uses.
		    
		    To blacklist by key terms, just enter the term alone such as "sand"
		    and all biome surfaces that uses blocks with sand in its name will
		    not be imported. After all, sand is coarse and rough and gets everywhere!
		    
		    To blacklist by mod ID, just enter the mod ID with an * on the end such as
		    "weird_biome_mod*" and all biome surfaces from that mod will not be imported.
		    
		    To blacklist a block from being a surface, enter the mod ID, then :, and then the 
		    block's name. For example, "minecraft:mycelium" will prevent any surfaces that uses
		    Mycelium blocks from being imported.
		    
		    Also, some biomes might add Air block as a surface block which will create pits in
		    the surface that looks like it is missing the top layer of land. Add minecraft:air to 
		    this config to prevent these kinds of surfaces from being added.
		    
		    NOTE: You can blacklist multiple things at a time. Just separate
		    each entry with a , (comma). Here's an example blacklisting all sand
		    surfaces and vanilla Mushroom Biome's Mycelium surface: 
		    "sand, minecraft:mycelium"
		*/
		"blacklistedBiomeSurfaces": "",
		/*  Decides if the dimension can import anything from modded biomes.
		    Note: If the other vanilla stuff options are set to true and you
		    this option set to true as well, then vanilla stuff can still
		    get imported if a modded biome has vanilla stuff in it.
		*/
		"allowModdedBiomeImport": true,
		/*  Decides if the dimension imports features like trees, plants, ores, etc.
		*/
		"allowModdedFeatures": true,
		/*  Decides if the dimension imports structures like temples, villages, etc.
		*/
		"allowModdedStructures": true,
		/*  Decides if the dimension imports carvers like caves, ravines, etc.
		*/
		"allowModdedCarvers": true,
		/*  Decides if the dimension imports natural mob spawns like zombies, cows, etc.
		*/
		"allowModdedSpawns": true,
		/*  Decides if the dimension imports surfaces like desert's sand, giant tree taiga's podzol, etc.
		*/
		"allowModdedSurfaces": true,
		/*  Decides if the dimension can import anything from vanilla biomes.
		    Note: If the other vanilla stuff options are set to true and you 
		    have the import from modded biome option set to true as well, then
		    vanilla stuff can still get imported if a modded biome has them.
		*/
		"allowVanillaBiomeImport": true,
		/*  Decides if the dimension imports features like trees, plants, ores, etc.
		*/
		"allowVanillaFeatures": true,
		/*  Decides if the dimension imports structures like temples, villages, etc.
		*/
		"allowVanillaStructures": true,
		/*  Decides if the dimension imports carvers like caves, ravines, etc.
		*/
		"allowVanillaCarvers": true,
		/*  Decides if the dimension imports natural mob spawns like zombies, cows, etc.
		*/
		"allowVanillaSpawns": true,
		/*  Decides if the dimension imports surfaces like desert's sand, giant tree taiga's podzol, etc.
		*/
		"allowVanillaSurfaces": true,
		/*  Will make vanilla bamboo, lava, and fire features and will try to 
		    make modded bamboo, lava, and fire features not spawn at all
		    in order to help reduce lag in the world due to bamboo
		    breaking like crazy or fire spreading rapidly.
		    
		    If all else fail, do /gamerule doFireTick false to reduce fire lag.
		*/
		"disallowLaggyFeatures": true,
		/*  Dumps all resource locations (IDs) for all mods into a new file
		    called identifierDump.txt and can be found by looking below
		    the saves and mods folder in Minecraft's folder. The file is made if you set this option to true and then run modded Minecraft until you reach the title menu.
		   
		    Use this option to look up the resource location or name of features, biomes, blocks, carvers, structures, or entities that you want to blacklist.
		*/
		"identifierDump": false
	},
	"WBDimensionConfig": { 
		/*  The size of the different kinds of surfaces. Higher numbers means
		    each surface will be larger but might make some surfaces harder to find. Lower numbers means the surfaces are smaller but could become too chaotic or small for some features to spawn on.
		*/
		"surfaceScale": 240.0,
		/*  If true, the Enderdragon will spawn at world origin in the
		    World Blender dimension. Once killed, the podium's portal 
		    will take you to the End where you can battle the End's Enderdragon. 
		    
		    And yes, you can respawn the EnderDragon by placing 4 End Crystals 
		    on the edges of the Bedrock Podium. 
		    
		    If set to false, the Enderdragon will not spawn.
		    NOTE: Once the Enderdragon is spawned, changing this to false will not despawn the Enderdragon.
		*/
		"spawnEnderDragon": true,
		/*  If true, carvers (mainly vanilla caves and ravines) can now carve
		    out Netherrack, End Stone, and some modded blocks as well.
		    
		    If turned off, you might see Vanilla caves and stuff gets cutoff 
		    by a wall of End Stone, Netherrack, or modded blocks. 
		*/
		"carversCanCarveMoreBlocks": true,
		/*  Will try its best to place Terracotta blocks under all floating
		    fallable blocks to prevent lag when the blocks begins to fall.
		*/
		"preventFallingBlocks": true,
		/*  This will also place Terracotta next to fluids to try and prevent.
		    them from floating and then flowing downward like crazy.
		    
		    It isn't perfect but it does do mostly a good job with how
		    messy and chaotic having all features and carvers together is.
		*/
		"containFloatingLiquids": true,
		/*  Will place Obsidian to separate lava tagged fluids 
		    from water tagged fluids underground.
		*/
		"preventLavaTouchingWater": true
	},
	"WBPortalConfig": { 
		/*  Item(s) that you need in your hand when you're crouching and right
		    clicking a chest block to begin the portal creation process.
		    This activation item will then be consumed. You can specify more
		    than 1 item that can be used to make the portal. Just separate the
		    item identifiers with a comma.
		    
		    NOTE: the 8 chests needs to be in a 2x2 pattern before this mod  starts checking the contents of the chests and then create the portal if there are enough unique blocks in the chests. 
		    You can remove a portal by crouch right clicking except for the
		    portal block at world origin in World Blender dimension.
		*/
		"activationItem": "minecraft:nether_star",
		/*  You can specify what specific blocks are required to be in
		    the chests to make the portal. Format is the block's identifiers
		    with each block separated by a comma. Example:
		    "minecraft:dirt, minecraft:sand, minecraft:stone"
		    
		   If you specify 1 required block but the portal needs 3 blocks,
		    players will need to place that one required block and any two 
		    other blocks into the chests.
		    
		    If you specify 4 required blocks but the portal needs 2 unique blocks,
		    then players only needs to add any 2 of the 4 blocks to make the portal.
		*/
		"requiredBlocksInChests": "",
		/*  If true, portal creation will destroy the chests and all contents in it
		    Non-block items and stacks of items will still be consumed.
		    
		    If set to false, the chests and contents will be dropped when portal is made.
		*/
		"consumeChests": true,
		/* How many kinds of block items needed to be in the eight
		    chests (or other chest tagged blocks) to create the portal. 
		    
		    Items with no block form will be ignored and not counted but still be consumed.
		    
		    If you set this to beyond 216 (the maximum number of slots in 8 vanilla chests),
		    make sure you have a mod that has a chest that has much more inventory slots to fill or else you cannot create the portal.
		*/
		"uniqueBlocksNeeded": 64
	}
}